"use strict";(self.webpackChunkjavascript_parser_in_rust=self.webpackChunkjavascript_parser_in_rust||[]).push([[779],{7459:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/rome","metadata":{"permalink":"/javascript-parser-in-rust/ja/blog/rome","editUrl":"https://github.com/oxc-project/javascript-parser-in-rust/tree/main/blog/rome.md","source":"@site/i18n/ja/docusaurus-plugin-content-blog/rome.md","title":"Rome Tools","description":"Rome \u306f\u3001JavaScript \u3068 TypeScript \u306e\u30d1\u30fc\u30b9\u306b\u69d8\u3005\u306a\u6280\u8853\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u305d\u308c\u3089\u3092\u7406\u89e3\u3057\u3084\u3059\u3044\u9806\u5e8f\u3067\u8981\u7d04\u3057\u3066\u3044\u307e\u3059\u3002","date":"2023-11-15T03:08:26.000Z","formattedDate":"2023\u5e7411\u670815\u65e5","tags":[],"readingTime":3.615,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Rome Tools"},"unlisted":false,"nextItem":{"title":"\u6587\u6cd5","permalink":"/javascript-parser-in-rust/ja/blog/grammar"}},"content":"Rome \u306f\u3001JavaScript \u3068 TypeScript \u306e\u30d1\u30fc\u30b9\u306b\u69d8\u3005\u306a\u6280\u8853\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u305d\u308c\u3089\u3092\u7406\u89e3\u3057\u3084\u3059\u3044\u9806\u5e8f\u3067\u8981\u7d04\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6b74\u53f2\\n\\n- Rome \u306e\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306f TypeScript \u304b\u3089 Rust \u306b\u66f8\u304d\u76f4\u3055\u308c\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f [Rome will be rewritten in Rust](https://web.archive.org/web/20230401084626/https://rome.tools/blog/2021/09/21/rome-will-be-rewritten-in-rust/) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\\n- \u3053\u306e\u6c7a\u5b9a\u306f\u3001[rslint](https://github.com/rslint/rslint) \u3068 [rust-analyzer](https://github.com/rust-lang/rust-analyzer) \u306e\u4f5c\u8005\u3068\u306e\u8a71\u3057\u5408\u3044\u306e\u7d50\u679c\u884c\u308f\u308c\u307e\u3057\u305f\u3002\\n- rust-analyzer \u306f\u3001IDE \u306e\u3088\u3046\u306a\u30c4\u30fc\u30eb\u3092\u5177\u8c61\u69cb\u6587\u6728\u3092\u30d9\u30fc\u30b9\u306b\u69cb\u7bc9\u3067\u304d\u308b\u3053\u3068\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002\\n- rslint \u306f\u3001rust-analyzer \u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u3066\u3001 Rust \u3067 JavaScript \u306e\u30d1\u30fc\u30b5\u30fc\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002\\n- Rome \u306f\u3001\u4f5c\u8005\u306e\u8a31\u53ef\u3092\u5f97\u3066 rslint \u306e\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u3092\u81ea\u5206\u305f\u3061\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u79fb\u690d\u3057\u307e\u3057\u305f\u3002\\n\\n## \u5177\u8c61\u69cb\u6587\u6728 (CST)\\n\\n- \u30d9\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306f [rowan](https://github.com/rust-analyzer/rowan) \u3068\u547c\u3070\u308c\u3066\u304a\u308a\u3001\u8a73\u7d30\u306f [overview of rowan](https://github.com/rust-lang/rust-analyzer/blob/master/docs/dev/syntax.md) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\\n- Rowan (red-green trees \u3068\u3057\u3066\u3082\u77e5\u3089\u308c\u3066\u3044\u308b) \u306f\u3001\u8d64\u3044\u30d9\u30ea\u30fc\u3092\u5b9f\u3089\u305b\u308b [Rowan](https://en.wikipedia.org/wiki/Rowan) \u3068\u3044\u3046\u6728\u306b\u3061\u306a\u3093\u3067\u540d\u4ed8\u3051\u3089\u308c\u307e\u3057\u305f\u3002\\n- red-green trees \u306e\u7531\u6765\u306f\u3001C# \u306e\u4f5c\u8005\u306b\u3088\u308b[\u30d6\u30ed\u30b0\u8a18\u4e8b](https://ericlippert.com/2012/06/08/red-green-trees/)\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n- Rowan \u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u3059\u3079\u3066\u3092\u8a18\u8ff0\u3059\u308b\u640d\u5931\u306e\u306a\u3044 CST \u3092\u5b9a\u7fa9\u3057\u3001\u69cb\u6587\u6728\u306e\u89aa\u3001\u5b50\u3001\u5144\u5f1f\u30ce\u30fc\u30c9\u306a\u3069\u3092\u8d70\u67fb\u3059\u308b\u4e00\u9023\u306e API \u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\\n- AST \u3088\u308a\u3082 CST \u3092\u5229\u7528\u3059\u308b\u5229\u70b9\u306b\u3064\u3044\u3066\u306f\u3001[Pure AST based linting sucks](https://rdambrosio016.github.io/rust/2020/09/18/pure-ast-based-linting-sucks.html) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\\n- CST \u306f\u5b8c\u5168\u306b\u56de\u5fa9\u53ef\u80fd\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u69cb\u7bc9\u3059\u308b\u624b\u6bb5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\\n\\n## \u6587\u6cd5\\n\\n- AST \u3068\u540c\u69d8\u306b\u6587\u6cd5\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6587\u6cd5\u306f\u3001[xtask/codegen](https://github.com/rome/tools/tree/main/xtask/codegen) \u3092\u4f7f\u7528\u3057\u3066\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\\n- \u6587\u6cd5\u306f [ungrammar](https://github.com/rust-analyzer/ungrammar) \u3068\u3044\u3046 DSL \u304b\u3089\u751f\u6210\u3055\u308c\u307e\u3059\u3002\\n- \u5165\u529b\u306e `ungrammar` \u306e \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u3001[xtask/codegen/js.ungram](https://github.com/rome/tools/blob/main/xtask/codegen/js.ungram) \u306b\u3042\u308a\u307e\u3059\u3002\\n- \u751f\u6210\u3055\u308c\u308b\u30b3\u30fc\u30c9\u306f\u3001 [rome_js_syntax/src/generated](https://github.com/rome/tools/tree/main/crates/rome_js_syntax/src/generated) \u306b\u3042\u308a\u307e\u3059\u3002\\n\\n## \u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\\n\\nRome \u306e\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306f\u5927\u304d\u304f\u306a\u308a\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u898b\u3064\u3051\u308b\u306e\u304c\u5c11\u3057\u96e3\u3057\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\\n\\n\u521d\u3081\u3066\u306e\u65b9\u306e\u305f\u3081\u306b\u3001\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30d0\u30a4\u30ca\u30ea\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b `rome_cli` \u30af\u30ec\u30fc\u30c8\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\\n\\n```bash\\ncargo run -p rome_cli\\n\\ntouch test.js\\ncargo run -p rome_cli -- check ./test.js\\n```\\n\\n`rome_cli` \u306f\u6700\u7d42\u7684\u306b `rome_js_parser::parse` \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\\n\\n```rust reference\\nhttps://github.com/rome/tools/blob/9815467c66688773bc1bb6ef9a5b2d86ca7b3682/crates/rome_js_parser/src/parse.rs#L178-L187\\n```\\n\\n\u5b9f\u969b\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306e\u3088\u3046\u306b\u59cb\u307e\u308a\u307e\u3059\u3002\\n\\n```rust reference\\nhttps://github.com/rome/tools/blob/9815467c66688773bc1bb6ef9a5b2d86ca7b3682/crates/rome_js_parser/src/syntax/program.rs#L14-L17\\n```\\n\\n## \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\\n\\n- [CONTRIBUTING.md](https://github.com/rome/tools/blob/main/CONTRIBUTING.md) \u306b\u306f\u3001\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u65b9\u6cd5\u306e\u8aac\u660e\u304c\u3042\u308a\u307e\u3059\u3002\\n- \u30d1\u30fc\u30b5\u30fc\u306e\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001[`cargo codegen test`](https://github.com/rome/tools/tree/main/xtask/codegen#cargo-codegen-test) \u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\\n- \u9069\u5408\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001 [`cargo coverage`](https://github.com/rome/tools/tree/main/xtask/coverage) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\\n- \u5206\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u3042\u308c\u3070\u3001[Discord \u30b5\u30fc\u30d0\u30fc](https://discord.com/invite/rome) \u3067\u81ea\u7531\u306b\u8cea\u554f\u3067\u304d\u307e\u3059\u3002\\n\\n:::info\\nJavaScript / TypeScript \u30d1\u30fc\u30b5\u30fc\u306f 99% \u5b8c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u6700\u5584\u306e\u65b9\u6cd5\u306f\u3001\u72ec\u81ea\u306e\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u3067 Rome \u3092\u30c6\u30b9\u30c8\u3059\u308b\u304b\u3001Github \u306e\u554f\u984c\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u3059\u3002\\n:::"},{"id":"/grammar","metadata":{"permalink":"/javascript-parser-in-rust/ja/blog/grammar","editUrl":"https://github.com/oxc-project/javascript-parser-in-rust/tree/main/blog/grammar.md","source":"@site/i18n/ja/docusaurus-plugin-content-blog/grammar.md","title":"\u6587\u6cd5","description":"JavaScript \u306e\u6587\u6cd5\u306f\u89e3\u6790\u304c\u975e\u5e38\u306b\u56f0\u96e3\u306a\u3082\u306e\u306e\u4e00\u3064\u3067\u3042\u308a\u3001","date":"2023-11-15T03:08:26.000Z","formattedDate":"2023\u5e7411\u670815\u65e5","tags":[],"readingTime":25.08,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"\u6587\u6cd5"},"unlisted":false,"prevItem":{"title":"Rome Tools","permalink":"/javascript-parser-in-rust/ja/blog/rome"},"nextItem":{"title":"ECMAScript \u306e\u4ed5\u69d8","permalink":"/javascript-parser-in-rust/ja/blog/ecma-spec"}},"content":"JavaScript \u306e\u6587\u6cd5\u306f\u89e3\u6790\u304c\u975e\u5e38\u306b\u56f0\u96e3\u306a\u3082\u306e\u306e\u4e00\u3064\u3067\u3042\u308a\u3001\\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u79c1\u304c\u5b66\u7fd2\u4e2d\u306b\u7d4c\u9a13\u3057\u305f\u82e6\u52b4\u3068\u6d99\u3092\u8a73\u7d30\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\\n\\n## LL(1)\u6587\u6cd5\\n\\n[Wikipedia](https://en.wikipedia.org/wiki/LL_grammar) \u306b\u3088\u308b\u3068\u3001\\n\\n> an LL grammar is a context-free grammar that can be parsed by an LL parser, which parses the input from Left to right\\n\\n\u6700\u521d\u306e\u300cL\u300d\u306f\u30bd\u30fc\u30b9\u3092\u5de6\u304b\u3089\u53f3\u306b\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3001\\n2\u756a\u76ee\u306e\u300cL\u300d\u306f\u5de6\u7aef\u5c0e\u51fa\u6728\u306e\u69cb\u7bc9\u3092\u610f\u5473\u3057\u307e\u3059\u3002\\n\\n\u6587\u8108\u81ea\u7531\u3067\u3042\u308a\u3001LL(1) \u306e\u300c1\u300d\u306f\u6b21\u306e\u30c8\u30fc\u30af\u30f3\u3092\u8997\u304d\u898b\u308b\u3060\u3051\u3067\u6728\u3092\u69cb\u7bc9\u3067\u304d\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\\n\\nLL \u6587\u6cd5\u306f\u3001\u79c1\u305f\u3061\u304c\u6020\u60f0\u306a\u4eba\u9593\u3067\u3042\u308a\u3001\u30d1\u30fc\u30b5\u3092\u624b\u52d5\u3067\u66f8\u304f\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u81ea\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u305f\u3044\u3068\u3044\u3046\u7406\u7531\u3067\u3001\u5b66\u8853\u754c\u3067\u7279\u306b\u8208\u5473\u3092\u6301\u305f\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u3001\u307b\u3068\u3093\u3069\u306e\u7523\u696d\u7528\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u306f\u7d20\u6674\u3089\u3057\u3044 LL(1) \u6587\u6cd5\u306f\u3042\u308a\u307e\u305b\u3093\u3002\\nJavaScript \u3082\u305d\u306e\u4f8b\u5916\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\\n\\n:::info\\nMozilla\u306f\u6570\u5e74\u524d\u306b [jsparagus](https://github.com/mozilla-spidermonkey/jsparagus) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u3001\\n[Python \u3067 LALR \u30d1\u30fc\u30b5\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf](https://github.com/mozilla-spidermonkey/jsparagus/tree/master/jsparagus) \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\\n\u5f7c\u3089\u306f\u904e\u53bb2\u5e74\u9593\u307b\u3068\u3093\u3069\u66f4\u65b0\u3057\u3066\u304a\u3089\u305a\u3001[js-quirks.md](https://github.com/mozilla-spidermonkey/jsparagus/blob/master/js-quirks.md) \u306e\u6700\u5f8c\u306b\u5f37\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u3044\u307e\u3059\u3002\\n\\n> What have we learned today?\\n>\\n> - Do not write a JS parser.\\n> - JavaScript has some syntactic horrors in it. But hey, you don\'t make the world\'s most widely used programming language by avoiding all mistakes.\\n\\n:::\\n\\n---\\n\\nJavaScript \u3092\u89e3\u6790\u3059\u308b\u552f\u4e00\u306e\u5b9f\u7528\u7684\u306a\u65b9\u6cd5\u306f\u3001\u305d\u306e\u6587\u6cd5\u306e\u6027\u8cea\u4e0a\u3001\u624b\u52d5\u3067\u518d\u5e30\u4e0b\u964d\u30d1\u30fc\u30b5\u3092\u66f8\u304f\u3053\u3068\u3067\u3059\u3002\\n\u305d\u306e\u305f\u3081\u3001\u8db3\u3092\u6483\u3064\u524d\u306b\u6587\u6cd5\u306e\u7279\u7570\u6027\u3092\u3059\u3079\u3066\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\\n\\n\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u306f\u7c21\u5358\u306a\u3082\u306e\u304b\u3089\u7406\u89e3\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u3001\\n\u30b3\u30fc\u30d2\u30fc\u3092\u98f2\u3093\u3067\u3086\u3063\u304f\u308a\u3068\u6642\u9593\u3092\u304b\u3051\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n## \u8b58\u5225\u5b50\\n\\n`#sec-identifiers` \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u8b58\u5225\u5b50\u306b\u306f3\u3064\u306e\u30bf\u30a4\u30d7\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n```markup\\nIdentifierReference[Yield, Await] :\\nBindingIdentifier[Yield, Await] :\\nLabelIdentifier[Yield, Await] :\\n```\\n\\n`estree` \u304a\u3088\u3073\u4e00\u90e8\u306e AST \u3067\u306f\u3001\u4e0a\u8a18\u306e\u8b58\u5225\u5b50\u3092\u533a\u5225\u305b\u305a\u3001\u4ed5\u69d8\u66f8\u3067\u306f\u305d\u308c\u3089\u3092\u5e73\u6587\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u3002\\n\\n`BindingIdentifier` \u306f\u5ba3\u8a00\u3067\u3042\u308a\u3001`IdentifierReference` \u306f\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u8b58\u5225\u5b50\u3078\u306e\u53c2\u7167\u3067\u3059\u3002\\n\u4f8b\u3048\u3070\u3001`var foo = bar` \u306e\u5834\u5408\u3001`foo` \u306f\u6587\u6cd5\u4e0a\u306e `BindingIdentifier` \u3067\u3042\u308a\u3001`bar` \u306f `IdentifierReference` \u3067\u3059\u3002\\n\\n```markup\\nVariableDeclaration[In, Yield, Await] :\\n    BindingIdentifier[?Yield, ?Await] Initializer[?In, ?Yield, ?Await] opt\\n\\nInitializer[In, Yield, Await] :\\n    = AssignmentExpression[?In, ?Yield, ?Await]\\n```\\n\\n`AssignmentExpression` \u3092 `PrimaryExpression` \u306b\u305f\u3069\u308b\u3068\u3001\\n\\n```markup\\nPrimaryExpression[Yield, Await] :\\n    IdentifierReference[?Yield, ?Await]\\n```\\n\\nAST\u3067\u3053\u308c\u3089\u306e\u8b58\u5225\u5b50\u3092\u7570\u306a\u308b\u65b9\u6cd5\u3067\u5ba3\u8a00\u3059\u308b\u3068\u3001\u7279\u306b\u610f\u5473\u89e3\u6790\u306e\u305f\u3081\u306b\u3001\u4e0b\u6d41\u306e\u30c4\u30fc\u30eb\u3092\u5927\u5e45\u306b\u7c21\u7d20\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n```rust\\npub struct BindingIdentifier {\\n    pub node: Node,\\n    pub name: Atom,\\n}\\n\\npub struct IdentifierReference {\\n    pub node: Node,\\n    pub name: Atom,\\n}\\n```\\n\\n---\\n\\n## \u30af\u30e9\u30b9\u3068 Strict \u30e2\u30fc\u30c9\\n\\nECMAScript \u306e\u30af\u30e9\u30b9\u306f\u3001Strict \u30e2\u30fc\u30c9\u306e\u5f8c\u306b\u751f\u307e\u308c\u305f\u305f\u3081\u3001\u30af\u30e9\u30b9\u5185\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u306f\u30b7\u30f3\u30d7\u30eb\u3055\u306e\u305f\u3081\u306b Strict \u30e2\u30fc\u30c9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n`#sec-class-definitions` \u3067\u306f\u3001`Node: A class definition is always strict mode code.` \u3068\u8ff0\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n\u95a2\u6570\u30b9\u30b3\u30fc\u30d7\u3068\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u3067 Strict \u30e2\u30fc\u30c9\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u306f\u7c21\u5358\u3067\u3059\u304c\u3001`class` \u5ba3\u8a00\u306b\u306f\u30b9\u30b3\u30fc\u30d7\u304c\u306a\u3044\u305f\u3081\u3001\u30af\u30e9\u30b9\u306e\u89e3\u6790\u306e\u305f\u3081\u306b\u8ffd\u52a0\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n```rust reference\\nhttps://github.com/swc-project/swc/blob/f9c4eff94a133fa497778328fa0734aa22d5697c/crates/swc_ecma_parser/src/parser/class_and_fn.rs#L85\\n```\\n\\n---\\n\\n## \u30ec\u30ac\u30b7\u30fc\u30aa\u30af\u30bf\u30eb\u3068 Use Strict\\n\\n`#sec-string-literals-early-errors` \u3067\u306f\u3001\u6587\u5b57\u5217\u5185\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u305f\u30ec\u30ac\u30b7\u30fc\u30aa\u30af\u30bf\u30eb `\\"\\\\01\\"` \u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\\n\\n```markup\\nEscapeSequence ::\\n    LegacyOctalEscapeSequence\\n    NonOctalDecimalEscapeSequence\\n\\n\u3053\u306e\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u306b\u30de\u30c3\u30c1\u3059\u308b\u30bd\u30fc\u30b9\u30c6\u30ad\u30b9\u30c8\u304c Strict \u30e2\u30fc\u30c9\u30b3\u30fc\u30c9\u3067\u3042\u308b\u5834\u5408\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u3067\u3059\u3002\\n```\\n\\n\u3053\u308c\u3092\u691c\u51fa\u3059\u308b\u306e\u306b\u6700\u9069\u306a\u5834\u6240\u306f\u3001\u30ec\u30ad\u30b5\u30fc\u306e\u5185\u90e8\u3067\u3059\u3002\u30ec\u30ad\u30b5\u30fc\u306f\u30d1\u30fc\u30b5\u30fc\u306b Strict \u30e2\u30fc\u30c9\u306e\u72b6\u614b\u3092\u5c0b\u306d\u3001\u305d\u308c\u306b\u5fdc\u3058\u3066\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\u3057\u304b\u3057\u3001\u3053\u308c\u306f\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3068\u6df7\u5728\u3057\u305f\u5834\u5408\u306b\u306f\u4e0d\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\\n\\n```javascript reference\\nhttps://github.com/tc39/test262/blob/747bed2e8aaafe8fdf2c65e8a10dd7ae64f66c47/test/language/literals/string/legacy-octal-escape-sequence-prologue-strict.js#L16-L19\\n```\\n\\n`use strict` \u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u305f\u30ec\u30ac\u30b7\u30fc\u30aa\u30af\u30bf\u30eb\u306e\u5f8c\u306b\u5ba3\u8a00\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u5e78\u3044\u306a\u3053\u3068\u306b\u3001\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3068\u30ec\u30ac\u30b7\u30fc\u30aa\u30af\u30bf\u30eb\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093...\u4e0a\u8a18\u306e test262 \u306e\u30b1\u30fc\u30b9\u3092\u30d1\u30b9\u3057\u305f\u3044\u5834\u5408\u3092\u9664\u3044\u3066\u306f\u3002\\n\\n---\\n\\n## \u975e\u5358\u7d14\u30d1\u30e9\u30e1\u30fc\u30bf\u3068 Strict \u30e2\u30fc\u30c9\\n\\n\u975eStrict\u30e2\u30fc\u30c9\u3067\u306f\u3001\u540c\u3058\u95a2\u6570\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a31\u53ef\u3057\u307e\u3059 `function foo(a, a) { }`\u3001\u305d\u3057\u3066 `use strict` \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u3053\u308c\u3092\u7981\u6b62\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a`function foo(a, a) { \\"use strict\\" }`\u3002\\n\u305d\u306e\u5f8c\u306ees6\u3067\u306f\u3001\u95a2\u6570\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4ed6\u306e\u6587\u6cd5\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070 `function foo({ a }, b = c) {}`\u3002\\n\\n\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u5834\u5408\u3001\\"01\\" \u306f Strict \u30e2\u30fc\u30c9\u306e\u30a8\u30e9\u30fc\u3068\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\\n\\n```javaScript\\nfunction foo(value=(function() { return \\"\\\\01\\" }())) {\\n    \\"use strict\\";\\n    return value;\\n}\\n```\\n\\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u89b3\u70b9\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u5185\u306b Strict \u30e2\u30fc\u30c9\u306e\u69cb\u6587\u30a8\u30e9\u30fc\u304c\u3042\u308b\u5834\u5408\u3001\u3069\u3046\u3059\u3079\u304d\u3067\u3057\u3087\u3046\u304b\uff1f\\n\u305d\u306e\u305f\u3081\u3001`#sec-function-definitions-static-semantics-early-errors` \u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8ff0\u3079\u3066\u3053\u308c\u3092\u7981\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n```markup\\nFunctionDeclaration :\\nFunctionExpression :\\n\\nFunctionBody\u304cFunctionBodyContainsUseStrict\u3067true\u3067\u3042\u308a\u3001FormalParameters\u304cIsSimpleParameterList\u3067false\u3067\u3042\u308b\u5834\u5408\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u3067\u3059\u3002\\n```\\n\\nChrome \u306f\u3001\u8b0e\u3081\u3044\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u300cUncaught SyntaxError: Illegal \'use strict\' directive in function with non-simple parameter list\u300d\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u3002\\n\\n\u8a73\u7d30\u306a\u8aac\u660e\u306f\u3001ESLint \u306e\u4f5c\u8005\u306b\u3088\u308b [\u3053\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b](https://humanwhocodes.com/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/) \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n:::info\\n\\n\u8208\u5473\u6df1\u3044\u4e8b\u5b9f\u3067\u3059\u304c\u3001TypeScript \u3067 `es5` \u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u4e0a\u8a18\u306e\u30eb\u30fc\u30eb\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002\u6b21\u306e\u3088\u3046\u306b\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\u3002\\n\\n```javaScript\\nfunction foo(a, b) {\\n    \\"use strict\\";\\n    if (b === void 0) { b = \\"\\\\01\\"; }\\n}\\n```\\n\\n:::\\n\\n---\\n\\n## ParenthesizedExpression\\n\\nParenthesizedExpression (\u30d1\u30ec\u30f3\u5f0f)\u306b\u306f\u610f\u5473\u304c\u306a\u3044\u306f\u305a\u3067\u3059\u304b\uff1f\\n\u4f8b\u3048\u3070\u3001`((x))`\u306eAST\u306f\u3001`ParenthesizedExpression` -> `ParenthesizedExpression` -> `IdentifierReference` \u3067\u306f\u306a\u304f\u3001\u5358\u4e00\u306e `IdentifierReference` \u3067\u3042\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\u305d\u3057\u3066\u3001\u3053\u308c\u306f JavaScript \u306e\u6587\u6cd5\u306e\u5834\u5408\u3067\u3059\u3002\\n\\n\u3057\u304b\u3057...\u8ab0\u304c\u5b9f\u884c\u6642\u306e\u610f\u5473\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3063\u305f\u3067\u3057\u3087\u3046\u304b\u3002\\n[\u3053\u306e estree \u306e\u554f\u984c](https://github.com/estree/estree/issues/194)\u3067\u898b\u3064\u304b\u3063\u305f\u3088\u3046\u306b\u3001\\n\\n```javascript\\n> fn = function () {};\\n> fn.name\\n< \\"fn\\"\\n\\n> (fn) = function () {};\\n> fn.name\\n< \'\'\\n```\\n\\n\u7d50\u5c40\u306e\u3068\u3053\u308d\u3001acorn \u3068 babel \u306f\u4e92\u63db\u6027\u306e\u305f\u3081\u306b `preserveParens` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\\n\\n---\\n\\n## if\u6587\u5185\u306e\u95a2\u6570\u5ba3\u8a00\\n\\n`#sec-ecmascript-language-statements-and-declarations` \u306e\u6587\u6cd5\u306b\u53b3\u5bc6\u306b\u5f93\u3046\u3068\u3001\\n\\n```markup\\nStatement[Yield, Await, Return] :\\n    ...\u305f\u304f\u3055\u3093\u306e\u6587\\n\\nDeclaration[Yield, Await] :\\n    ...\u5ba3\u8a00\\n```\\n\\n\u79c1\u305f\u3061\u306eAST\u306e\u305f\u3081\u306b\u5b9a\u7fa9\u3057\u305f `Statement` \u30ce\u30fc\u30c9\u306b\u306f\u660e\u3089\u304b\u306b `Declaration` \u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\\n\\n\u3057\u304b\u3057\u3001Annex B `#sec-functiondeclarations-in-ifstatement-statement-clauses` \u3067\u306f\u3001\u975e\u53b3\u5bc6\u30e2\u30fc\u30c9\u306e `if` \u6587\u306e\u6587\u306e\u4f4d\u7f6e\u306b\u5ba3\u8a00\u3092\u8a31\u53ef\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n```javascript\\nif (x) function foo() {}\\nelse function bar() {}\\n```\\n\\n---\\n\\n## \u30e9\u30d9\u30eb\u6587\u306f\u6b63\u5f53\u3067\u3059\\n\\n\u304a\u305d\u3089\u304f\u79c1\u305f\u3061\u306f\u4e00\u884c\u3082\u30e9\u30d9\u30eb\u4ed8\u304d\u6587\u3092\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u3067\u3057\u3087\u3046\u304c\u3001\u305d\u308c\u306f\u73fe\u4ee3\u306e JavaScript \u3067\u306f\u6b63\u5f53\u3067\u3042\u308a\u3001\u53b3\u5bc6\u30e2\u30fc\u30c9\u3067\u306f\u7981\u6b62\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\\n\\n\u6b21\u306e\u69cb\u6587\u306f\u6b63\u3057\u3044\u3067\u3059\u304c\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ea\u30c6\u30e9\u30eb\u3067\u306f\u306a\u304f\u3001\u30e9\u30d9\u30eb\u4ed8\u304d\u6587\u3092\u8fd4\u3057\u307e\u3059\u3002\\n\\n```javascript\\n<Foo\\n  bar={() => {\\n    baz: \\"quaz\\";\\n  }}\\n/>\\n//   ^^^^^^^^^^^ `LabelledStatement`\\n```\\n\\n---\\n\\n## `let` \u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\\n\\n`let` \u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u6587\u6cd5\u304c\u660e\u793a\u7684\u306b\u305d\u306e\u3088\u3046\u306a\u4f4d\u7f6e\u306b `let` \u304c\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u8ff0\u3079\u3066\u3044\u308b\u9650\u308a\u3001\u3069\u3053\u306b\u3067\u3082\u73fe\u308c\u308b\u3053\u3068\u304c\u8a31\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\u30d1\u30fc\u30b5\u30fc\u306f `let` \u30c8\u30fc\u30af\u30f3\u306e\u6b21\u306e\u30c8\u30fc\u30af\u30f3\u3092\u8997\u304d\u898b\u3066\u3001\u305d\u308c\u3092\u3069\u306e\u3088\u3046\u306b\u89e3\u6790\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\uff1a\\n\\n```javascript\\nlet a;\\nlet = foo;\\nlet instanceof x;\\nlet + 1;\\nwhile (true) let;\\na = let[0];\\n```\\n\\n---\\n\\n## For-in / For-of \u3068 [In] \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\\n\\n`#prod-ForInOfStatement` \u306e `for-in` \u304a\u3088\u3073 `for-of` \u306e\u6587\u6cd5\u3092\u898b\u308b\u3068\u3001\u3053\u308c\u3089\u3092\u89e3\u6790\u3059\u308b\u65b9\u6cd5\u304c\u3059\u3050\u306b\u308f\u304b\u308a\u306b\u304f\u304f\u306a\u308a\u307e\u3059\u3002\\n\\n\u79c1\u305f\u3061\u304c\u7406\u89e3\u3059\u308b\u305f\u3081\u306e2\u3064\u306e\u4e3b\u306a\u969c\u5bb3\u304c\u3042\u308a\u307e\u3059\uff1a`[lookahead \u2260 let]` \u306e\u90e8\u5206\u3068 `[+In]` \u306e\u90e8\u5206\u3067\u3059\u3002\\n\\n`for (let` \u307e\u3067\u89e3\u6790\u3057\u305f\u5834\u5408\u3001\u6b21\u306e\u30c8\u30fc\u30af\u30f3\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a\\n\\n- `in` \u3067\u306f\u306a\u3044\u3053\u3068\uff08`for (let in` \u3092\u8a31\u53ef\u3057\u306a\u3044\u305f\u3081\uff09\\n- `{`\u3001`[`\u3001\u307e\u305f\u306f\u8b58\u5225\u5b50\u3067\u3042\u308b\u3053\u3068\uff08`for (let {} = foo)`\u3001`for (let [] = foo)`\u3001`for (let bar = foo)` \u3092\u8a31\u53ef\u3059\u308b\u305f\u3081\uff09\\n\\n`of` \u307e\u305f\u306f `in` \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u5230\u9054\u3057\u305f\u3089\u3001\u53f3\u8fba\u306e\u5f0f\u306f\u6b63\u3057\u3044[+In]\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001`#prod-RelationalExpression` \u306e2\u3064\u306e `in` \u5f0f\u304c\u8a31\u53ef\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\\n\\n```\\nRelationalExpression[In, Yield, Await] :\\n    [+In] RelationalExpression[+In, ?Yield, ?Await] in ShiftExpression[?Yield, ?Await]\\n    [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\\n\\nNote 2: [In ]\u6587\u6cd5\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3001\u95a2\u4fc2\u5f0f\u5185\u306ein\u6f14\u7b97\u5b50\u3068for\u6587\u5185\u306ein\u6f14\u7b97\u5b50\u3092\u6df7\u540c\u3057\u306a\u3044\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\\n```\\n\\n\u3053\u308c\u306f\u4ed5\u69d8\u5168\u4f53\u3067\u306e [In] \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u552f\u4e00\u306e\u9069\u7528\u3067\u3059\u3002\\n\\n\u307e\u305f\u3001\u6587\u6cd5 `[lookahead \u2209 { let, async of }]` \u306f `for (async of ...)` \u3092\u7981\u6b62\u3057\u3066\u304a\u308a\u3001\u660e\u793a\u7684\u306b\u9632\u6b62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n---\\n\\n## \u30d6\u30ed\u30c3\u30af\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u5ba3\u8a00\\n\\nAnnex B.3.2 `#sec-block-level-function-declarations-web-legacy-compatibility-semantics` \u3067\u306f\u3001`FunctionDeclaration` \u304c `Block` \u6587\u3067\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u304b\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306b1\u30da\u30fc\u30b8\u304c\u5272\u304b\u308c\u3066\u3044\u307e\u3059\u3002\\n\u8981\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\\n\\n```javascript reference\\nhttps://github.com/acornjs/acorn/blob/11735729c4ebe590e406f952059813f250a4cbd1/acorn/src/scope.js#L30-L35\\n```\\n\\n`FunctionDeclaration` \u306e\u540d\u524d\u306f\u3001\u95a2\u6570\u5ba3\u8a00\u5185\u306b\u3042\u308b\u5834\u5408\u306b\u306f `var` \u5ba3\u8a00\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u308f\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u6b21\u306e\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u3001`bar` \u304c\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u5185\u306b\u3042\u308b\u305f\u3081\u3001\u518d\u5ba3\u8a00\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\\n\\n```javascript\\nfunction foo() {\\n  if (true) {\\n    var bar;\\n    function bar() {} // \u518d\u5ba3\u8a00\u30a8\u30e9\u30fc\\n  }\\n}\\n```\\n\\n\u4e00\u65b9\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u305b\u3093\u3002\u95a2\u6570 `bar` \u306f\u95a2\u6570\u30b9\u30b3\u30fc\u30d7\u5185\u306b\u3042\u308b\u305f\u3081\u3001var \u5ba3\u8a00\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\\n\\n```javascript\\nfunction foo() {\\n  var bar;\\n  function bar() {}\\n}\\n```\\n\\n---\\n\\n## \u6587\u6cd5\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\\n\\n\u69cb\u6587\u7684\u306a\u6587\u6cd5\u306b\u306f\u3001\u7279\u5b9a\u306e\u69cb\u9020\u3092\u8a31\u53ef\u307e\u305f\u306f\u7981\u6b62\u3059\u308b\u305f\u3081\u306e 5 \u3064\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u3002\\n\u5177\u4f53\u7684\u306b\u306f\u3001`[In]`\u3001`[Return]`\u3001`[Yield]`\u3001`[Await]`\u3001`[Default]` \u3067\u3059\u3002\\n\\n\u89e3\u6790\u4e2d\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u6700\u5584\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001Rome\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\\n\\n```rust reference\\nhttps://github.com/rome/tools/blob/5a059c0413baf1d54436ac0c149a829f0dfd1f4d/crates/rome_js_parser/src/state.rs#L404-L425\\n```\\n\\n\u305d\u3057\u3066\u3001\u6587\u6cd5\u306b\u5f93\u3063\u3066\u3053\u308c\u3089\u306e\u30d5\u30e9\u30b0\u3092\u5207\u308a\u66ff\u3048\u3066\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\\n\\n## AssignmentPattern \u3068 BindingPattern\\n\\n`estree` \u3067\u306f\u3001`AssignmentExpression` \u306e\u5de6\u8fba\u306f `Pattern` \u3067\u3059\u3002\\n\\n```markup\\nextend interface AssignmentExpression {\\n    left: Pattern;\\n}\\n```\\n\\n\u305d\u3057\u3066\u3001`VariableDeclarator` \u306e\u5de6\u8fba\u3082 `Pattern` \u3067\u3059\u3002\\n\\n```markup\\ninterface VariableDeclarator <: Node {\\n    type: \\"VariableDeclarator\\";\\n    id: Pattern;\\n    init: Expression | null;\\n}\\n```\\n\\n`Pattern` \u306f `Identifier`\u3001`ObjectPattern`\u3001`ArrayPattern` \u306e\u3044\u305a\u308c\u304b\u3067\u3059\u3002\\n\\n```markup\\ninterface Identifier <: Expression, Pattern {\\n    type: \\"Identifier\\";\\n    name: string;\\n}\\n\\ninterface ObjectPattern <: Pattern {\\n    type: \\"ObjectPattern\\";\\n    properties: [ AssignmentProperty ];\\n}\\n\\ninterface ArrayPattern <: Pattern {\\n    type: \\"ArrayPattern\\";\\n    elements: [ Pattern | null ];\\n}\\n```\\n\\n\u3057\u304b\u3057\u3001\u4ed5\u69d8\u306e\u89b3\u70b9\u304b\u3089\u306f\u3001\u6b21\u306e\u3088\u3046\u306a JavaScript \u304c\u3042\u308a\u307e\u3059\u3002\\n\\n```javascript\\n// AssignmentExpression:\\n{ foo } = bar;\\n  ^^^ IdentifierReference\\n[ foo ] = bar;\\n  ^^^ IdentifierReference\\n\\n// VariableDeclarator\\nvar { foo } = bar;\\n      ^^^ BindingIdentifier\\nvar [ foo ] = bar;\\n      ^^^ BindingIdentifier\\n```\\n\\n\u3053\u308c\u306f\u6df7\u4e71\u3092\u62db\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001`Identifier` \u304c `BindingIdentifier` \u306a\u306e\u304b `IdentifierReference` \u306a\u306e\u304b\u3092\u76f4\u63a5\u533a\u5225\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u304b\u3089\u3067\u3059\u3002\\n\\n```rust\\nenum Pattern {\\n    Identifier, // \u3053\u308c\u306f`BindingIdentifier`\u306a\u306e\u304b`IdentifierReference`\u306a\u306e\u304b\uff1f\\n    ArrayPattern,\\n    ObjectPattern,\\n}\\n```\\n\\n\u3053\u308c\u306b\u3088\u308a\u3001\u30d1\u30fc\u30b5\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u3055\u3089\u306a\u308b\u4e0d\u8981\u306a\u30b3\u30fc\u30c9\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u610f\u5473\u89e3\u6790\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u3001\u3053\u306e `Identifier` \u3092\u30b9\u30b3\u30fc\u30d7\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306e `Identifier` \u306e\u89aa\u3092\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n\u3088\u308a\u826f\u3044\u89e3\u6c7a\u7b56\u306f\u3001\u4ed5\u69d8\u3092\u5b8c\u5168\u306b\u7406\u89e3\u3057\u3001\u4f55\u3092\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\\n\\n`AssignmentExpression` \u3068 `VariableDeclaration` \u306e\u6587\u6cd5\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n```marup\\n13.15 Assignment Operators\\n\\nAssignmentExpression[In, Yield, Await] :\\n    LeftHandSideExpression[?Yield, ?Await] = AssignmentExpression[?In, ?Yield, ?Await]\\n\\n13.15.5 Destructuring Assignment\\n\\nIn certain circumstances when processing an instance of the production\\nAssignmentExpression : LeftHandSideExpression = AssignmentExpression\\nthe interpretation of LeftHandSideExpression is refined using the following grammar:\\n\\nAssignmentPattern[Yield, Await] :\\n    ObjectAssignmentPattern[?Yield, ?Await]\\n    ArrayAssignmentPattern[?Yield, ?Await]\\n```\\n\\n```markup\\n14.3.2 Variable Statement\\n\\nVariableDeclaration[In, Yield, Await] :\\n    BindingIdentifier[?Yield, ?Await] Initializer[?In, ?Yield, ?Await]opt\\n    BindingPattern[?Yield, ?Await] Initializer[?In, ?Yield, ?Await]\\n```\\n\\n\u4ed5\u69d8\u3067\u306f\u3001\u3053\u308c\u3089\u306e\u6587\u6cd5\u3092 `AssignmentPattern` \u3068 `BindingPattern` \u3068\u3057\u3066\u5225\u3005\u306b\u5b9a\u7fa9\u3057\u3066\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u305d\u306e\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u72b6\u6cc1\u3067\u306f\u3001`estree` \u304b\u3089\u9038\u8131\u3057\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u305f\u3081\u306b\u8ffd\u52a0\u306eAST\u30ce\u30fc\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3092\u6050\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\\n\\n```rust\\nenum BindingPattern {\\n    BindingIdentifier,\\n    ObjectBindingPattern,\\n    ArrayBindingPattern,\\n}\\n\\nenum AssignmentPattern {\\n    IdentifierReference,\\n    ObjectAssignmentPattern,\\n    ArrayAssignmentPattern,\\n}\\n```\\n\\n\u79c1\u306f1\u9031\u9593\u3082\u306e\u9593\u3001\u975e\u5e38\u306b\u6df7\u4e71\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3064\u3044\u306b\u609f\u308a\u306b\u9054\u3057\u307e\u3057\u305f\u3002\u5358\u4e00\u306e `Pattern` \u30ce\u30fc\u30c9\u3067\u306f\u306a\u304f\u3001`AssignmentPattern` \u30ce\u30fc\u30c9\u3068 `BindingPattern` \u30ce\u30fc\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n- `estree` \u306f\u6b63\u3057\u3044\u306f\u305a\u3067\u3059\u3002\u4f55\u5e74\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u306f\u305a\u304c\u3042\u308a\u307e\u305b\u3093\u3088\u306d\uff1f\\n- \u30d1\u30bf\u30fc\u30f3\u5185\u306e `Identifier` \u3092\u304d\u308c\u3044\u306b\u533a\u5225\u3059\u308b\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u304b\uff1f\u6587\u6cd5\u306f\u3069\u3053\u306b\u3042\u308b\u306e\u304b\u898b\u3064\u3051\u3089\u308c\u307e\u305b\u3093\u3002\\n- 1\u65e5\u4e2d\u4ed5\u69d8\u3092\u8abf\u3079\u3066\u3082\u3001`AssignmentPattern` \u306e\u6587\u6cd5\u306f\u30e1\u30a4\u30f3\u30bb\u30af\u30b7\u30e7\u30f3\u306e5\u756a\u76ee\u306e\u30b5\u30d6\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3042\u308a\u3001\u30b5\u30d6\u30bf\u30a4\u30c8\u30eb\u304c\u300cSupplemental Syntax\u300d\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u672c\u5f53\u306b\u5834\u9055\u3044\u3067\u3059\u3002\u3059\u3079\u3066\u306e\u6587\u6cd5\u306f\u30e1\u30a4\u30f3\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u306b\u3001\u3053\u306e\u6587\u6cd5\u3060\u3051\u304c\u300cRuntime Semantics\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u5f8c\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n---\\n\\n:::caution\\n\u4ee5\u4e0b\u306e\u30b1\u30fc\u30b9\u306f\u975e\u5e38\u306b\u7406\u89e3\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\\n:::\\n\\n## \u66d6\u6627\u306a\u6587\u6cd5\\n\\n\u307e\u305a\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u3088\u3046\u306b\u8003\u3048\u3066\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3057\u3087\u3046 - `/` \u30c8\u30fc\u30af\u30f3\u304c\u9664\u7b97\u6f14\u7b97\u5b50\u306a\u306e\u304b\u6b63\u898f\u8868\u73fe\u5f0f\u306e\u958b\u59cb\u306a\u306e\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\\n\\n```javascript\\na / b;\\na / / regex /;\\na /= / regex /;\\n/ regex / / b;\\n/=/ / /=/;\\n```\\n\\n\u3053\u308c\u306f\u307b\u3068\u3093\u3069\u4e0d\u53ef\u80fd\u3067\u3059\u306d\u3002\u3053\u308c\u3089\u3092\u5206\u89e3\u3057\u3066\u6587\u6cd5\u306b\u5f93\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\\n\\n\u307e\u305a\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u306f\u3001\u69cb\u6587\u7684\u6587\u6cd5\u304c\u5b57\u53e5\u7684\u6587\u6cd5\u3092\u99c6\u52d5\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002`#sec-ecmascript-language-lexical-grammar` \u3067\u8ff0\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n> There are several situations where the identification of lexical input elements is sensitive to the syntactic grammar context that is consuming the input elements.\\n\\n\u3053\u308c\u306f\u3001\u30d1\u30fc\u30b5\u30fc\u304c\u6b21\u306b\u8fd4\u3059\u30c8\u30fc\u30af\u30f3\u3092\u5b57\u53e5\u89e3\u6790\u5668\u306b\u6307\u793a\u3059\u308b\u8cac\u4efb\u304c\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u5b57\u53e5\u89e3\u6790\u5668\u304c `/` \u30c8\u30fc\u30af\u30f3\u307e\u305f\u306f `RegExp` \u30c8\u30fc\u30af\u30f3\u306e\u3044\u305a\u308c\u304b\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u6b63\u3057\u3044 `/` \u307e\u305f\u306f `RegExp` \u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u3001\u4ed5\u69d8\u306f\u6b21\u306e\u3088\u3046\u306b\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002\\n\\n> The InputElementRegExp goal symbol is used in all syntactic grammar contexts where a RegularExpressionLiteral is permitted ... In all other contexts, InputElementDiv is used as the lexical goal symbol.\\n\\n\u305d\u3057\u3066\u3001`InputElementDiv` \u3068 `InputElementRegExp` \u306e\u69cb\u6587\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\\n\\n```markup\\nInputElementDiv ::\\n    WhiteSpace\\n    LineTerminator\\n    Comment\\n    CommonToken\\n    DivPunctuator <---------- `/`\u304a\u3088\u3073`/=`\u30c8\u30fc\u30af\u30f3\\n    RightBracePunctuator\\n\\nInputElementRegExp ::\\n    WhiteSpace\\n    LineTerminator\\n    Comment\\n    CommonToken\\n    RightBracePunctuator\\n    RegularExpressionLiteral <-------- `RegExp`\u30c8\u30fc\u30af\u30f3\\n```\\n\\n\u3053\u308c\u306f\u3001\u6587\u6cd5\u304c `RegularExpressionLiteral` \u306b\u5230\u9054\u3059\u308b\u305f\u3073\u306b\u3001`/` \u3092 `RegExp` \u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u30c8\u30fc\u30af\u30f3\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\uff08\u4e00\u81f4\u3059\u308b `/` \u304c\u306a\u3044\u5834\u5408\u306f\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\uff09\u3002\\n\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001`/` \u3092\u30b9\u30e9\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u30c8\u30fc\u30af\u30f3\u5316\u3057\u307e\u3059\u3002\\n\\n\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff1a\\n\\n```\\na / / regex /\\n^ ------------ PrimaryExpression:: IdentifierReference\\n  ^ ---------- MultiplicativeExpression: MultiplicativeExpression MultiplicativeOperator ExponentiationExpression\\n    ^^^^^^^^ - PrimaryExpression: RegularExpressionLiteral\\n```\\n\\n\u3053\u306e\u6587\u306f `Statement` \u306e\u4ed6\u306e\u958b\u59cb\u3068\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u3001`ExpressionStatement` \u306e\u30eb\u30fc\u30c8\u306b\u9032\u307f\u307e\u3059\u3002\\n\\n`ExpressionStatement` --\x3e `Expression` --\x3e `AssignmentExpression` --\x3e ... --\x3e\\n`MultiplicativeExpression` --\x3e ... --\x3e\\n`MemberExpression` --\x3e `PrimaryExpression` --\x3e `IdentifierReference`\u3002\\n\\n`IdentifierReference` \u3067\u6b62\u307e\u308a\u3001`RegularExpressionLiteral` \u3067\u306f\u306a\u304f\u3001\u6587\u300c\u305d\u308c\u4ee5\u5916\u306e\u3059\u3079\u3066\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u306f\u3001InputElementDiv\u304c\u5b57\u53e5\u30b4\u30fc\u30eb\u8a18\u53f7\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u300d\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002\\n\u6700\u521d\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u306f `DivPunctuator` \u30c8\u30fc\u30af\u30f3\u3067\u3059\u3002\\n\\n\u3053\u308c\u304c `DivPunctuator` \u30c8\u30fc\u30af\u30f3\u3067\u3042\u308b\u305f\u3081\u3001\u6587\u6cd5 `MultiplicativeExpression: MultiplicativeExpression MultiplicativeOperator ExponentiationExpression` \u304c\u4e00\u81f4\u3057\u3001\u53f3\u8fba\u306f `ExponentiationExpression` \u3067\u3042\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u307e\u3059\u3002\\n\\n\u4eca\u5ea6\u306f `a / /` \u306e2\u756a\u76ee\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u3044\u307e\u3059\u3002\\n`ExponentiationExpression` \u306b\u5f93\u3063\u3066\u3044\u304f\u3068\u3001`RegularExpressionLiteral` \u306b\u5230\u9054\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001`RegularExpressionLiteral` \u304c `/` \u3068\u4e00\u81f4\u3059\u308b\u552f\u4e00\u306e\u6587\u6cd5\u3060\u304b\u3089\u3067\u3059\u3002\\n\\n```markup\\nRegularExpressionLiteral ::\\n    / RegularExpressionBody / RegularExpressionFlags\\n```\\n\\n\u3053\u306e2\u756a\u76ee\u306e `/` \u306f `RegExp` \u3068\u3057\u3066\u30c8\u30fc\u30af\u30f3\u5316\u3055\u308c\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u4ed5\u69d8\u304c\u300cRegularExpressionLiteral \u304c\u8a31\u53ef\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u69cb\u6587\u7684\u6587\u6cd5\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067 InputElementRegExp \u30b4\u30fc\u30eb\u8a18\u53f7\u304c\u4f7f\u7528\u3055\u308c\u308b\u300d\u3068\u8ff0\u3079\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\\n\\n:::info\\n\u7df4\u7fd2\u3068\u3057\u3066\u3001`/=/ / /=/` \u306e\u6587\u6cd5\u306b\u5f93\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\\n:::\\n\\n---\\n\\n## Cover Grammar\\n\\n\u307e\u305a\u3001\u3053\u306e\u30c8\u30d4\u30c3\u30af\u306b\u95a2\u3059\u308b [V8\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b](https://v8.dev/blog/understanding-ecmascript-part-4) \u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\\n\\n\u8981\u7d04\u3059\u308b\u3068\u3001\u4ed5\u69d8\u306f\u6b21\u306e3\u3064\u306e Cover Grammar \u3092\u8ff0\u3079\u3066\u3044\u307e\u3059\uff1a\\n\\n#### CoverParenthesizedExpressionAndArrowParameterList\\n\\n```markup\\nPrimaryExpression[Yield, Await] :\\n    CoverParenthesizedExpressionAndArrowParameterList[?Yield, ?Await]\\n\\nPrimaryExpression[Yield, Await] : CoverParenthesizedExpressionAndArrowParameterList[?Yield, ?Await] \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u51e6\u7406\u3059\u308b\u969b\u3001CoverParenthesizedExpressionAndArrowParameterList \u306e\u89e3\u91c8\u306f\u4ee5\u4e0b\u306e\u6587\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u6d17\u7df4\u3055\u308c\u307e\u3059:\\n\\nParenthesizedExpression[Yield, Await] :\\n    ( Expression[+In, ?Yield, ?Await] )\\n```\\n\\n```markup\\nArrowFunction[In, Yield, Await] :\\n    ArrowParameters[?Yield, ?Await] [\u3053\u3053\u306b\u306f LineTerminator \u304c\u306a\u3044] => ConciseBody[?In]\\n\\nArrowParameters[Yield, Await] :\\n    BindingIdentifier[?Yield, ?Await]\\n    CoverParenthesizedExpressionAndArrowParameterList[?Yield, ?Await]\\n```\\n\\n\u3053\u308c\u3089\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u3092\u5b9a\u7fa9\u3057\u307e\u3059:\\n\\n```javascript\\nlet foo = (a, b, c); // SequenceExpression\\nlet bar = (a, b, c) => {}; // ArrowExpression\\n          ^^^^^^^^^ CoverParenthesizedExpressionAndArrowParameterList\\n```\\n\\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u5358\u7d14\u3067\u624b\u9593\u306e\u304b\u304b\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u307e\u305a `Vec<Expression>` \u3068\u3057\u3066\u89e3\u6790\u3057\u3001\\n\u305d\u308c\u3092 `ArrowParameters` \u30ce\u30fc\u30c9\u306b\u5909\u63db\u3059\u308b\u5909\u63db\u95a2\u6570\u3092\u66f8\u304f\u3053\u3068\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u5404\u500b\u5225\u306e `Expression` \u3092 `BindingPattern` \u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n\u306a\u304a\u3001\u3082\u3057\u30d1\u30fc\u30b5\u30fc\u5185\u3067\u30b9\u30b3\u30fc\u30d7\u30c4\u30ea\u30fc\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u5834\u5408\u3001\\n\u3064\u307e\u308a\u3001\u30d1\u30fc\u30b5\u30fc\u5185\u3067\u30a2\u30ed\u30fc\u5f0f\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u304c\u3001\\n\u30b7\u30fc\u30b1\u30f3\u30b9\u5f0f\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\\n\u3053\u308c\u3092\u3069\u306e\u3088\u3046\u306b\u884c\u3046\u304b\u306f\u660e\u3089\u304b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002[esbuild](https://github.com/evanw/esbuild) \u306f\u3001\u4e00\u6642\u7684\u306a\u30b9\u30b3\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u3001\\n\u305d\u308c\u304c `ArrowExpression` \u3067\u306a\u3044\u5834\u5408\u306b\u306f\u524a\u9664\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\u3053\u308c\u306f\u3001\u305d\u306e [\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/evanw/esbuild/blob/master/docs/architecture.md#symbols-and-scopes) \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059:\\n\\n> This is mostly pretty straightforward except for a few places where the parser has pushed a scope and is in the middle of parsing a declaration only to discover that it\'s not a declaration after all. This happens in TypeScript when a function is forward-declared without a body, and in JavaScript when it\'s ambiguous whether a parenthesized expression is an arrow function or not until we reach the => token afterwards. This would be solved by doing three passes instead of two so we finish parsing before starting to set up scopes and declare symbols, but we\'re trying to do this in just two passes. So instead we call popAndDiscardScope() or popAndFlattenScope() instead of popScope() to modify the scope tree later if our assumptions turn out to be incorrect.\\n\\n---\\n\\n#### CoverCallExpressionAndAsyncArrowHead\\n\\n```markup\\nCallExpression :\\n    CoverCallExpressionAndAsyncArrowHead\\n\\nCallExpression : CoverCallExpressionAndAsyncArrowHead \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u51e6\u7406\u3059\u308b\u969b\u3001CoverCallExpressionAndAsyncArrowHead \u306e\u89e3\u91c8\u306f\u4ee5\u4e0b\u306e\u6587\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u6d17\u7df4\u3055\u308c\u307e\u3059:\\n\\nCallMemberExpression[Yield, Await] :\\n    MemberExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\\n```\\n\\n```markup\\nAsyncArrowFunction[In, Yield, Await] :\\n    CoverCallExpressionAndAsyncArrowHead[?Yield, ?Await] [\u3053\u3053\u306b\u306f\u6539\u884c\u6587\u5b57\u304c\u306a\u3044] => AsyncConciseBody[?In]\\n\\nCoverCallExpressionAndAsyncArrowHead[Yield, Await] :\\n    MemberExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\\n\\nAsyncArrowFunction : CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u51e6\u7406\u3059\u308b\u969b\u3001CoverCallExpressionAndAsyncArrowHead \u306e\u89e3\u91c8\u306f\u4ee5\u4e0b\u306e\u6587\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u6d17\u7df4\u3055\u308c\u307e\u3059:\\n\\nAsyncArrowHead :\\n    async [\u3053\u3053\u306b\u306f\u6539\u884c\u6587\u5b57\u304c\u306a\u3044] ArrowFormalParameters[~Yield, +Await]\\n```\\n\\n\u3053\u308c\u3089\u306e\u5b9a\u7fa9\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u307e\u3059:\\n\\n```javascript\\nasync (a, b, c); // CallExpression\\nasync (a, b, c) => {} // AsyncArrowFunction\\n^^^^^^^^^^^^^^^ CoverCallExpressionAndAsyncArrowHead\\n```\\n\\n\u3053\u308c\u306f\u5947\u5999\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001`async` \u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6700\u521d\u306e `async` \u306f\u95a2\u6570\u540d\u3067\u3059\u3002\\n\\n---\\n\\n#### CoverInitializedName\\n\\n```markup\\n13.2.5 Object Initializer\\n\\nObjectLiteral[Yield, Await] :\\n    ...\\n\\nPropertyDefinition[Yield, Await] :\\n    CoverInitializedName[?Yield, ?Await]\\n\\nNote 3: In certain contexts, ObjectLiteral is used as a cover grammar for a more restricted secondary grammar.\\nThe CoverInitializedName production is necessary to fully cover these secondary grammars. However, use of this production results in an early Syntax Error in normal contexts where an actual ObjectLiteral is expected.\\n\\n13.2.5.1 Static Semantics: Early Errors\\n\\nIn addition to describing an actual object initializer the ObjectLiteral productions are also used as a cover grammar for ObjectAssignmentPattern and may be recognized as part of a CoverParenthesizedExpressionAndArrowParameterList. When ObjectLiteral appears in a context where ObjectAssignmentPattern is required the following Early Error rules are not applied. In addition, they are not applied when initially parsing a CoverParenthesizedExpressionAndArrowParameterList or CoverCallExpressionAndAsyncArrowHead.\\n\\nPropertyDefinition : CoverInitializedName\\n    I* t is a Syntax Error if any source text is matched by this production.\\n```\\n\\n```makrup\\n13.15.1 Static Semantics: Early Errors\\n\\nAssignmentExpression : LeftHandSideExpression = AssignmentExpression\\nIf LeftHandSideExpression is an ObjectLiteral or an ArrayLiteral, the following Early Error rules are applied:\\n    * LeftHandSideExpression must cover an AssignmentPattern.\\n```\\n\\n\u3053\u308c\u3089\u306e\u5b9a\u7fa9\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u307e\u3059:\\n\\n```javascript\\n({ prop = value } = {}); // ObjectAssignmentPattern\\n({ prop = value }); // SyntaxError\u3092\u4f34\u3046ObjectLiteral\\n```\\n\\n\u30d1\u30fc\u30b5\u30fc\u306f `CoverInitializedName` \u3092\u6301\u3064 `ObjectLiteral` \u3092\u89e3\u6790\u3057\u3001`ObjectAssignmentPattern` \u306e\u305f\u3081\u306e `=` \u306b\u5230\u9054\u3057\u306a\u3044\u5834\u5408\u306f\u69cb\u6587\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n\u7df4\u7fd2\u3068\u3057\u3066\u3001\u6b21\u306e `=` \u306e\u3046\u3061\u3069\u308c\u304c\u69cb\u6587\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\\n\\n```javascript\\nlet { x = 1 } = { x = 1 } = { x = 1 }\\n```"},{"id":"/ecma-spec","metadata":{"permalink":"/javascript-parser-in-rust/ja/blog/ecma-spec","editUrl":"https://github.com/oxc-project/javascript-parser-in-rust/tree/main/blog/ecma-spec.md","source":"@site/i18n/ja/docusaurus-plugin-content-blog/ecma-spec.md","title":"ECMAScript \u306e\u4ed5\u69d8","description":"ECMAScript\xae 2023\u8a00\u8a9e\u4ed5\u69d8\u66f8 \u306f\u3001JavaScript \u306b\u3064\u3044\u3066\u306e\u3059\u3079\u3066\u306e\u8a73\u7d30\u3092\u8a18\u8f09\u3057\u3066\u304a\u308a\u3001\u8ab0\u3067\u3082\u72ec\u81ea\u306e JavaScript \u30a8\u30f3\u30b8\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","date":"2023-11-15T03:08:26.000Z","formattedDate":"2023\u5e7411\u670815\u65e5","tags":[],"readingTime":5.185,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"ECMAScript \u306e\u4ed5\u69d8"},"unlisted":false,"prevItem":{"title":"\u6587\u6cd5","permalink":"/javascript-parser-in-rust/ja/blog/grammar"},"nextItem":{"title":"\u30d1\u30fc\u30b5\u30fc\u306e\u9069\u5408\u8a66\u9a13","permalink":"/javascript-parser-in-rust/ja/blog/conformance"}},"content":"[ECMAScript\xae 2023\u8a00\u8a9e\u4ed5\u69d8\u66f8](https://tc39.es/ecma262/) \u306f\u3001JavaScript \u306b\u3064\u3044\u3066\u306e\u3059\u3079\u3066\u306e\u8a73\u7d30\u3092\u8a18\u8f09\u3057\u3066\u304a\u308a\u3001\u8ab0\u3067\u3082\u72ec\u81ea\u306e JavaScript \u30a8\u30f3\u30b8\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\u4ee5\u4e0b\u306e\u7ae0\u3092\u79c1\u305f\u3061\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u305f\u3081\u306b\u5b66\u7fd2\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a\\n\\n- \u7b2c5\u7ae0\uff1a\u8868\u8a18\u898f\u5247\\n- \u7b2c11\u7ae0\uff1aECMAScript \u8a00\u8a9e\uff1a\u30bd\u30fc\u30b9\u30c6\u30ad\u30b9\u30c8\\n- \u7b2c12\u7ae0\uff1aECMAScript \u8a00\u8a9e\uff1a\u5b57\u53e5\u6587\u6cd5\\n- \u7b2c13\u7ae0\u301c\u7b2c16\u7ae0\uff1a\u5f0f\u3001\u6587\u3001\u95a2\u6570\u3001\u30af\u30e9\u30b9\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\\n- \u4ed8\u9332B\uff1aWeb \u30d6\u30e9\u30a6\u30b6\u5411\u3051\u306e\u8ffd\u52a0 ECMAScript \u6a5f\u80fd\\n- \u4ed8\u9332C\uff1aECMAScript \u306e\u53b3\u5bc6\u30e2\u30fc\u30c9\\n\\n\u4ed5\u69d8\u66f8\u5185\u306e\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\uff1a\\n\\n- \u30af\u30ea\u30c3\u30af\u53ef\u80fd\u306a\u3082\u306e\u306b\u306f\u6c38\u7d9a\u7684\u306a\u30ea\u30f3\u30af\u304c\u3042\u308a\u3001URL \u306b\u30a2\u30f3\u30ab\u30fc\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f8b\uff1a`#sec-identifiers`\\n- \u30db\u30d0\u30fc\u3059\u308b\u3068\u30c4\u30fc\u30eb\u30c1\u30c3\u30d7\u304c\u8868\u793a\u3055\u308c\u3001`References` \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u305d\u306e\u53c2\u7167\u304c\u8868\u793a\u3055\u308c\u307e\u3059\\n\\n## \u8868\u8a18\u898f\u5247\\n\\n[\u7b2c5.1.5\u7bc0 \u6587\u6cd5\u8868\u8a18](https://tc39.es/ecma262/#sec-grammar-notation) \u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n\u3053\u3053\u3067\u6ce8\u610f\u3059\u308b\u3079\u304d\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff1a\\n\\n### \u518d\u5e30\\n\\n\u3053\u308c\u306f\u6587\u6cd5\u3067\u30ea\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u65b9\u6cd5\u3067\u3059\u3002\\n\\n```markup\\nArgumentList :\\n  AssignmentExpression\\n  ArgumentList , AssignmentExpression\\n```\\n\\n\u3068\u3044\u3046\u610f\u5473\u3067\u3059\\n\\n```javascript\\na, b = 1, c = 2\\n^_____________^ ArgumentList\\n   ^__________^ ArgumentList, AssignmentExpression,\\n          ^___^ AssignmentExpression\\n```\\n\\n### \u30aa\u30d7\u30b7\u30e7\u30f3\\n\\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u69cb\u6587\u306b\u306f `_opt_` \u63a5\u5c3e\u8f9e\u304c\u4ed8\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\\n\\n```markup\\nVariableDeclaration :\\n  BindingIdentifier Initializer_opt\\n```\\n\\n\u3068\u3044\u3046\u610f\u5473\u3067\u3059\\n\\n```javascript\\nvar binding_identifier;\\nvar binding_identifier = Initializer;\\n                       ______________ Initializer_opt\\n```\\n\\n### \u30d1\u30e9\u30e1\u30fc\u30bf\\n\\n`[Return]` \u3068 `[In]` \u306f\u6587\u6cd5\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002\\n\\n\u4f8b\u3048\u3070\\n\\n```markdup\\nScriptBody :\\n    StatementList[~Yield, ~Await, ~Return]\\n```\\n\\n\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e yield\u3001await\u3001return \u306f\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\\n\\n```markdup\\nModuleItem :\\n  ImportDeclaration\\n  ExportDeclaration\\n  StatementListItem[~Yield, +Await, ~Return]\\n```\\n\\n\u3067\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e await \u304c\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n## \u30bd\u30fc\u30b9\u30c6\u30ad\u30b9\u30c8\\n\\n[\u7b2c11.2\u7bc0 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u7a2e\u985e](https://tc39.es/ecma262/#sec-types-of-source-code) \u3067\u306f\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u30b3\u30fc\u30c9\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u30b3\u30fc\u30c9\u306e\u9593\u306b\u306f\u5927\u304d\u306a\u9055\u3044\u304c\u3042\u308b\u3053\u3068\u304c\u8ff0\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002\\n\u307e\u305f\u3001\u53e4\u3044 JavaScript \u306e\u632f\u308b\u821e\u3044\u3092\u7981\u6b62\u3059\u308b\u305f\u3081\u306e `use strict` \u30e2\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n**\u30b9\u30af\u30ea\u30d7\u30c8\u30b3\u30fc\u30c9** \u306f\u53b3\u5bc6\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u30b3\u30fc\u30c9\u3092\u53b3\u5bc6\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b `use strict` \u3092\u633f\u5165\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\nHTML\u3067\u306f `<script src=\\"javascript.js\\"><\/script>` \u3068\u66f8\u304d\u307e\u3059\u3002\\n\\n**\u30e2\u30b8\u30e5\u30fc\u30eb\u30b3\u30fc\u30c9** \u306f\u81ea\u52d5\u7684\u306b\u53b3\u5bc6\u3067\u3059\u3002\\nHTML\u3067\u306f `<script type=\\"module\\" src=\\"main.mjs\\"><\/script>` \u3068\u66f8\u304d\u307e\u3059\u3002\\n\\n## ECMAScript\u8a00\u8a9e\uff1a\u5b57\u53e5\u6587\u6cd5\\n\\n\u3088\u308a\u8a73\u7d30\u306a\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u3001V8 \u30d6\u30ed\u30b0\u306e [ECMAScript\u4ed5\u69d8\u306e\u7406\u89e3](https://v8.dev/blog/understanding-ecmascript-part-3) \u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\\n\\n### [\u81ea\u52d5\u30bb\u30df\u30b3\u30ed\u30f3\u633f\u5165](https://tc39.es/ecma262/#sec-automatic-semicolon-insertion)\\n\\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001JavaScript \u3092\u66f8\u304f\u969b\u306b\u30bb\u30df\u30b3\u30ed\u30f3\u3092\u7701\u7565\u3067\u304d\u308b\u30eb\u30fc\u30eb\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\\n\u3059\u3079\u3066\u306e\u8aac\u660e\u306f\u6b21\u306e\u3088\u3046\u306b\u8981\u7d04\u3055\u308c\u307e\u3059\\n\\n```rust\\n    pub fn asi(&mut self) -> Result<()> {\\n        if self.eat(Kind::Semicolon) || self.can_insert_semicolon() {\\n            return Ok(());\\n        }\\n        let range = self.prev_node_end..self.cur_token().start;\\n        Err(SyntaxError::AutoSemicolonInsertion(range.into()))\\n    }\\n\\n    pub const fn can_insert_semicolon(&self) -> bool {\\n        self.cur_token().is_on_new_line || matches!(self.cur_kind(), Kind::RCurly | Kind::Eof)\\n    }\\n```\\n\\n`asi` \u95a2\u6570\u306f\u9069\u7528\u53ef\u80fd\u306a\u5834\u6240\u3067\u624b\u52d5\u3067\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6587\u306e\u6700\u5f8c\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\\n\\n```rust\\n    fn parse_debugger_statement(&mut self) -> Result<Statement<\'a>> {\\n        let node = self.start_node();\\n        self.expect(Kind::Debugger)?;\\n        // highlight-next-line\\n        self.asi()?;\\n        self.ast.debugger_statement(self.finish_node(node))\\n    }\\n```\\n\\n:::info\\n\\n\u3053\u306e asi \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u30d1\u30fc\u30b5\u30fc\u3092\u60f3\u5b9a\u3057\u3066\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\u30bd\u30fc\u30b9\u30c6\u30ad\u30b9\u30c8\u306f\u5de6\u304b\u3089\u53f3\u306b\u89e3\u6790\u3055\u308c\u308b\u3053\u3068\u304c\u660e\u793a\u7684\u306b\u8ff0\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4ed6\u306e\u65b9\u6cd5\u3067\u30d1\u30fc\u30b5\u30fc\u3092\u66f8\u304f\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u4e0d\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002jsparagus \u306e\u4f5c\u8005\u306f [\u3053\u3053](https://github.com/mozilla-spidermonkey/jsparagus/blob/master/js-quirks.md#automatic-semicolon-insertion-) \u3067\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u611a\u75f4\u3092\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002\\n\\n> \u3053\u306e\u6a5f\u80fd\u306e\u4ed5\u69d8\u306f\u975e\u5e38\u306b\u9ad8\u30ec\u30d9\u30eb\u3067\u3042\u308a\u3001\u5947\u5999\u306a\u624b\u7d9a\u304d\u7684\u306a\u3082\u306e\u3067\u3059\uff08\u300c\u30bd\u30fc\u30b9\u30c6\u30ad\u30b9\u30c8\u304c\u5de6\u304b\u3089\u53f3\u306b\u89e3\u6790\u3055\u308c\u308b\u3068\u304d\u306b\u3001\u30c8\u30fc\u30af\u30f3\u304c\u906d\u9047\u3055\u308c\u308b\u3068...\u300d\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u4ed5\u69d8\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u3064\u3044\u3066\u306e\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u8a9e\u3063\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u3067\u3059\u3002\u79c1\u306e\u77e5\u308b\u9650\u308a\u3001\u3053\u308c\u306f\u89e3\u6790\u306e\u5185\u90e8\u5b9f\u88c5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u4f55\u304b\u304c\u524d\u63d0\u3055\u308c\u305f\u308a\u6697\u793a\u3055\u308c\u305f\u308a\u3059\u308b\u4ed5\u69d8\u306e\u552f\u4e00\u306e\u5834\u6240\u3067\u3059\u3002\uff09\u3057\u304b\u3057\u3001asi \u3092\u4ed6\u306e\u65b9\u6cd5\u3067\u6307\u5b9a\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3067\u3057\u3087\u3046\u3002\\n\\n:::\\n\\n## \u5f0f\u3001\u6587\u3001\u95a2\u6570\u3001\u30af\u30e9\u30b9\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\\n\\n\u69cb\u6587\u7684\u306a\u6587\u6cd5\u3092\u7406\u89e3\u3057\u3001\u305d\u308c\u3092\u30d1\u30fc\u30b5\u30fc\u306e\u4f5c\u6210\u306b\u9069\u7528\u3059\u308b\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\\n\u3088\u308a\u8a73\u7d30\u306a\u5185\u5bb9\u306f\u3001[\u6587\u6cd5\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](./grammar.md) \u3067\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n## \u4ed8\u9332B"},{"id":"/conformance","metadata":{"permalink":"/javascript-parser-in-rust/ja/blog/conformance","editUrl":"https://github.com/oxc-project/javascript-parser-in-rust/tree/main/blog/conformance.md","source":"@site/i18n/ja/docusaurus-plugin-content-blog/conformance.md","title":"\u30d1\u30fc\u30b5\u30fc\u306e\u9069\u5408\u8a66\u9a13","description":"\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001JavaScript \u304a\u3088\u3073 TypeScript \u306e\u6587\u6cd5\u306b\u5bfe\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3046\u305f\u3081\u306e 3 \u3064\u306e GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002","date":"2023-11-15T03:08:26.000Z","formattedDate":"2023\u5e7411\u670815\u65e5","tags":[],"readingTime":1.275,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u30d1\u30fc\u30b5\u30fc\u306e\u9069\u5408\u8a66\u9a13"},"unlisted":false,"prevItem":{"title":"ECMAScript \u306e\u4ed5\u69d8","permalink":"/javascript-parser-in-rust/ja/blog/ecma-spec"}},"content":"\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001JavaScript \u304a\u3088\u3073 TypeScript \u306e\u6587\u6cd5\u306b\u5bfe\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3046\u305f\u3081\u306e 3 \u3064\u306e GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Test262\\n\\nJavaScript \u306b\u306f\u3001Test262 \u3068\u547c\u3070\u308c\u308b [ECMAScript \u306e\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8](https://github.com/tc39/test262)\u304c\u3042\u308a\u307e\u3059\u3002\\nTest262 \u306e\u76ee\u6a19\u306f\u3001\u4ed5\u69d8\u3067\u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u89b3\u6e2c\u53ef\u80fd\u306a\u52d5\u4f5c\u3092\u30ab\u30d0\u30fc\u3059\u308b\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\\n\\n\u5b9f\u969b\u306b\u9069\u5408\u6027\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u306f\u3001\u3053\u3061\u3089\u306e[\u30d1\u30fc\u30b9\u30d5\u30a7\u30fc\u30ba\u306e\u30c6\u30b9\u30c8](https://github.com/tc39/test262/blob/main/INTERPRETING.md#negative)\u3092\u78ba\u8a8d\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\\n\\n## Babel\\n\\nJavaScript \u306b\u65b0\u3057\u3044\u8a00\u8a9e\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3068\u3001Babel \u3067\u3082\u305d\u308c\u3089\u3092\u89e3\u6790\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u3057\u305f\u304c\u3063\u3066\u3001Babel \u306b\u306f\u72ec\u81ea\u306e[\u30d1\u30fc\u30b5\u30fc\u30c6\u30b9\u30c8](https://github.com/babel/babel/tree/main/packages/babel-parser/test)\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n## TypeScript\\n\\nTypeScript \u306b\u304a\u3051\u308b\u9069\u5408\u6027\u30c6\u30b9\u30c8\u306f[\u3053\u3061\u3089](https://github.com/microsoft/TypeScript/tree/main/tests/cases/conformance)\u3067\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n## Test Runner\\n\\nRome \u306f\u4e0a\u8a18\u306e\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u7528\u306b\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001[\u3053\u3061\u3089](https://github.com/rome/tools/tree/main/xtask/coverage)\u304b\u3089\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}]}')}}]);