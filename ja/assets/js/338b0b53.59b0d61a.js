"use strict";(self.webpackChunkjavascript_parser_in_rust=self.webpackChunkjavascript_parser_in_rust||[]).push([[545],{7900:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(1527),s=r(7660);const i={id:"errors",title:"\u30a8\u30e9\u30fc\u51e6\u7406"},c=void 0,o={id:"errors",title:"\u30a8\u30e9\u30fc\u51e6\u7406",description:"Dragon Book \u304b\u3089\u5f15\u7528\u3057\u307e\u3059\u3002",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/errors.md",sourceDirName:".",slug:"/errors",permalink:"/javascript-parser-in-rust/ja/docs/errors",draft:!1,unlisted:!1,editUrl:"https://github.com/oxc-project/javascript-parser-in-rust/tree/main/docs/errors.md",tags:[],version:"current",frontMatter:{id:"errors",title:"\u30a8\u30e9\u30fc\u51e6\u7406"},sidebar:"tutorialSidebar",previous:{title:"\u69cb\u6587\u89e3\u6790\u5668 (\u30d1\u30fc\u30b5\u30fc)",permalink:"/javascript-parser-in-rust/ja/docs/parser"},next:{title:"\u610f\u5473\u89e3\u6790",permalink:"/javascript-parser-in-rust/ja/docs/semantics_analysis"}},d={},l=[{value:"Error \u30c8\u30ec\u30a4\u30c8",id:"error-\u30c8\u30ec\u30a4\u30c8",level:3},{value:"Fancy Error Report",id:"fancy-error-report",level:3}];function a(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.amazon.com/Compilers-Principles-Techniques-Tools-2nd/dp/0321486811",children:"Dragon Book"})," \u304b\u3089\u5f15\u7528\u3057\u307e\u3059\u3002"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Most programming language specifications do not describe how a compiler should respond to errors; error handling is left to the compiler designer. Planning the error handling right from the start can both simplify the structure of a compiler and improve its handling of errors."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u5b8c\u5168\u306b\u56de\u5fa9\u53ef\u80fd\u306a\u30d1\u30fc\u30b5\u30fc\u306f\u3001\u4f55\u3092\u6295\u3052\u3066\u3082 AST \u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30ea\u30f3\u30bf\u30fc\u3084\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u306a\u3069\u306e\u30c4\u30fc\u30eb\u3067\u306f\u3001\u90e8\u5206\u7684\u306b\u56de\u5fa9\u53ef\u80fd\u306a\u30d1\u30fc\u30b5\u30fc\u304c\u671b\u307e\u308c\u308b\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u30d1\u30cb\u30c3\u30af\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u306f\u3001\u6587\u6cd5\u306e\u4e0d\u4e00\u81f4\u304c\u3042\u308b\u5834\u5408\u306b\u4e2d\u65ad\u3057\u3001\u90e8\u5206\u7684\u306b\u56de\u5fa9\u53ef\u80fd\u306a\u30d1\u30fc\u30b5\u30fc\u306f\u6c7a\u5b9a\u7684\u306a\u6587\u6cd5\u304b\u3089\u56de\u5fa9\u3057\u307e\u3059\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u4f8b\u3048\u3070\u3001\u6587\u6cd5\u7684\u306b\u6b63\u3057\u304f\u306a\u3044 while \u6587 ",(0,t.jsx)(n.code,{children:"while true {}"})," \u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u3001\u4e38\u62ec\u5f27\u304c\u6b20\u843d\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u552f\u4e00\u306e\u53e5\u8aad\u70b9\u306f\u4e38\u62ec\u5f27\u3067\u3042\u308b\u305f\u3081\u3001\u6709\u52b9\u306aAST\u3092\u8fd4\u3057\u3001\u6b20\u843d\u3057\u3066\u3044\u308b\u62ec\u5f27\u3092\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u307b\u3068\u3093\u3069\u306e JavaScript \u30d1\u30fc\u30b5\u30fc\u306f\u90e8\u5206\u7684\u306b\u56de\u5fa9\u53ef\u80fd\u3067\u3059\u306e\u3067\u3001\u540c\u3058\u3088\u3046\u306b\u90e8\u5206\u7684\u306b\u56de\u5fa9\u53ef\u80fd\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/rome/tools",children:"Rome"})," \u30d1\u30fc\u30b5\u30fc\u306f\u5b8c\u5168\u306b\u56de\u5fa9\u53ef\u80fd\u306a\u30d1\u30fc\u30b5\u30fc\u3067\u3059\u3002"]})}),"\n",(0,t.jsxs)(n.p,{children:["Rust\u306b\u306f\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u3066\u4f1d\u64ad\u3055\u305b\u308b\u305f\u3081\u306e ",(0,t.jsx)(n.code,{children:"Result"})," \u578b\u304c\u3042\u308a\u307e\u3059\u3002\n",(0,t.jsx)(n.code,{children:"?"})," \u69cb\u6587\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u30d1\u30fc\u30b9\u95a2\u6570\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u30af\u30ea\u30fc\u30f3\u306a\u307e\u307e\u306b\u306a\u308a\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u30a8\u30e9\u30fc\u3092\u5f8c\u3067\u7f6e\u304d\u63db\u3048\u308b\u305f\u3081\u306b\u3001\u901a\u5e38\u306f Result \u578b\u3092\u30e9\u30c3\u30d7\u3057\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub type Result<T> = std::result::Result<T, ()>;\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u4f8b\u3048\u3070\u3001\u30d1\u30fc\u30b9\u95a2\u6570\u306f Result \u3092\u8fd4\u3057\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub fn parse_binding_pattern(&mut self, ctx: Context) -> Result<BindingPattern<'a>> {\n    match self.cur_kind() {\n        Kind::LCurly => self.parse_object_binding_pattern(ctx),\n        Kind::LBrack => self.parse_array_binding_pattern(ctx),\n        kind if kind.is_binding_identifier() => {\n          // ... \u30b3\u30fc\u30c9\u306f\u7701\u7565\n        }\n        // highlight-next-line\n        _ => Err(()),\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u6587\u6cd5\u306b\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306b\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u305f\u3081\u306e ",(0,t.jsx)(n.code,{children:"expect"})," \u95a2\u6570\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"/// `Kind`\u3092\u671f\u5f85\u3059\u308b\u304b\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\npub fn expect(&mut self, kind: Kind) -> Result<()> {\n    if !self.at(kind) {\n        return Err(())\n    }\n    self.advance();\n    Ok(())\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub fn parse_paren_expression(&mut self, ctx: Context) -> Result<Expression> {\n    self.expect(Kind::LParen)?;\n    let expression = self.parse_expression(ctx)?;\n    self.expect(Kind::RParen)?;\n    Ok(expression)\n}\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["\u5b8c\u5168\u6027\u306e\u305f\u3081\u306b\u3001\u5b57\u53e5\u89e3\u6790\u6642\u306b\u4e88\u671f\u3057\u306a\u3044 ",(0,t.jsx)(n.code,{children:"char"})," \u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306b\u3082\u3001\u5b57\u53e5\u89e3\u6790\u95a2\u6570 ",(0,t.jsx)(n.code,{children:"read_next_token"})," \u306f ",(0,t.jsx)(n.code,{children:"Result"})," \u3092\u8fd4\u3059\u3079\u304d\u3067\u3059\u3002"]})}),"\n",(0,t.jsx)(n.h3,{id:"error-\u30c8\u30ec\u30a4\u30c8",children:"Error \u30c8\u30ec\u30a4\u30c8"}),"\n",(0,t.jsxs)(n.p,{children:["\u7279\u5b9a\u306e\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u305f\u3081\u306b\u306f\u3001",(0,t.jsx)(n.code,{children:"Result"})," \u306e ",(0,t.jsx)(n.code,{children:"Err"})," \u90e8\u5206\u3092\u57cb\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub type Result<T> = std::result::Result<T, SyntaxError>;\n                                            ^^^^^^^^^^^\n#[derive(Debug)]\npub enum SyntaxError {\n    UnexpectedToken(String),\n    AutoSemicolonInsertion(String),\n    UnterminatedMultiLineComment(String),\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u3053\u308c\u3092 ",(0,t.jsx)(n.code,{children:"SyntaxError"})," \u3068\u547c\u3073\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001ECMAScript \u4ed5\u69d8\u306e\u6587\u6cd5\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u300c\u65e9\u671f\u30a8\u30e9\u30fc\u300d\u306f\u69cb\u6587\u30a8\u30e9\u30fc\u3060\u304b\u3089\u3067\u3059\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u3053\u308c\u3092\u6b63\u3057\u3044 ",(0,t.jsx)(n.code,{children:"Error"})," \u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001",(0,t.jsxs)(n.a,{href:"https://doc.rust-lang.org/std/error/trait.Error.html",children:[(0,t.jsx)(n.code,{children:"Error"})," \u30c8\u30ec\u30a4\u30c8"]}),"\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3088\u308a\u30af\u30ea\u30fc\u30f3\u306a\u30b3\u30fc\u30c9\u306e\u305f\u3081\u306b\u3001",(0,t.jsx)(n.a,{href:"https://docs.rs/thiserror/latest/thiserror",children:(0,t.jsx)(n.code,{children:"thiserror"})})," \u30af\u30ec\u30fc\u30c8\u306e\u30de\u30af\u30ed\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'#[derive(Debug, Error)]\npub enum SyntaxError {\n    #[error("Unexpected Token")]\n    UnexpectedToken,\n\n    #[error("Expected a semicolon or an implicit semicolon after a statement, but found none")]\n    AutoSemicolonInsertion,\n\n    #[error("Unterminated multi-line comment")]\n    UnterminatedMultiLineComment,\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u305d\u306e\u5f8c\u3001\u30c8\u30fc\u30af\u30f3\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306b\u30a8\u30e9\u30fc\u3092\u30b9\u30ed\u30fc\u3059\u308b\u305f\u3081\u306e ",(0,t.jsx)(n.code,{children:"expect"})," \u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"/// `Kind`\u3092\u671f\u5f85\u3059\u308b\u304b\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\npub fn expect(&mut self, kind: Kind) -> Result<()> {\n    if self.at(kind) {\n        return Err(SyntaxError::UnExpectedToken);\n    }\n    self.advance(kind);\n    Ok(())\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"parse_debugger_statement"})," \u306f\u3001\u9069\u5207\u306a\u30a8\u30e9\u30fc\u7ba1\u7406\u306e\u305f\u3081\u306b ",(0,t.jsx)(n.code,{children:"expect"})," \u95a2\u6570\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"fn parse_debugger_statement(&mut self) -> Result<Statement> {\n    let node = self.start_node();\n    self.expect(Kind::Debugger)?;\n    Ok(Statement::DebuggerStatement {\n        node: self.finish_node(node),\n    })\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"expect"})," \u306e\u5f8c\u306b ",(0,t.jsx)(n.code,{children:"?"})," \u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u308c\u306f\u3001",(0,t.jsx)(n.code,{children:"expect"})," \u95a2\u6570\u304c ",(0,t.jsx)(n.code,{children:"Err"})," \u3092\u8fd4\u3057\u305f\u5834\u5408\u306b\u95a2\u6570\u304c\u65e9\u671f\u306b\u30ea\u30bf\u30fc\u30f3\u3059\u308b\u305f\u3081\u306e\u69cb\u6587\u7cd6\u3067\u3059\u3002"]}),"\n",(0,t.jsx)(n.h3,{id:"fancy-error-report",children:"Fancy Error Report"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://docs.rs/miette/latest/miette",children:(0,t.jsx)(n.code,{children:"miette"})})," \u306f\u6700\u3082\u7d20\u6575\u306a\u30a8\u30e9\u30fc\u30ec\u30dd\u30fc\u30c8\u30af\u30ec\u30fc\u30c8\u306e 1 \u3064\u3067\u3042\u308a\u3001\n\u8996\u899a\u7684\u306b\u6d17\u7df4\u3055\u308c\u305f\u51fa\u529b\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://raw.githubusercontent.com/zkat/miette/main/images/serde_json.png",alt:"miette"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Cargo.toml"})," \u306b ",(0,t.jsx)(n.code,{children:"miette"})," \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[dependencies]\nmiette = { version = "5", features = ["fancy"] }\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Error"})," \u3092 ",(0,t.jsx)(n.code,{children:"miette"})," \u3067\u30e9\u30c3\u30d7\u3057\u3001\u30d1\u30fc\u30b5\u30fc\u3067\u5b9a\u7fa9\u3055\u308c\u305f ",(0,t.jsx)(n.code,{children:"Result"})," \u578b\u3092\u5909\u66f4\u305b\u305a\u306b\u3067\u304d\u307e\u3059\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'pub fn main() -> Result<()> {\n    let source_code = "".to_string();\n    let file_path = "test.js".to_string();\n    let mut parser = Parser::new(&source_code);\n    parser.parse().map_err(|error| {\n        miette::Error::new(error).with_source_code(miette::NamedSource::new(file_path, source_code))\n    })\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},7660:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var t=r(959);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);